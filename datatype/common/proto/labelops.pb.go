// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: labelops.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RenumberOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid    uint64 `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Target   uint64 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Newlabel uint64 `protobuf:"varint,3,opt,name=newlabel,proto3" json:"newlabel,omitempty"`
}

func (x *RenumberOp) Reset() {
	*x = RenumberOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenumberOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenumberOp) ProtoMessage() {}

func (x *RenumberOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenumberOp.ProtoReflect.Descriptor instead.
func (*RenumberOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{0}
}

func (x *RenumberOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *RenumberOp) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *RenumberOp) GetNewlabel() uint64 {
	if x != nil {
		return x.Newlabel
	}
	return 0
}

type MergeOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid  uint64   `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Target uint64   `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Merged []uint64 `protobuf:"varint,3,rep,packed,name=merged,proto3" json:"merged,omitempty"`
}

func (x *MergeOp) Reset() {
	*x = MergeOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeOp) ProtoMessage() {}

func (x *MergeOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeOp.ProtoReflect.Descriptor instead.
func (*MergeOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{1}
}

func (x *MergeOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *MergeOp) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *MergeOp) GetMerged() []uint64 {
	if x != nil {
		return x.Merged
	}
	return nil
}

type CleaveOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid        uint64   `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Target       uint64   `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Cleavedlabel uint64   `protobuf:"varint,3,opt,name=cleavedlabel,proto3" json:"cleavedlabel,omitempty"`
	Cleaved      []uint64 `protobuf:"varint,4,rep,packed,name=cleaved,proto3" json:"cleaved,omitempty"`
}

func (x *CleaveOp) Reset() {
	*x = CleaveOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleaveOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleaveOp) ProtoMessage() {}

func (x *CleaveOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleaveOp.ProtoReflect.Descriptor instead.
func (*CleaveOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{2}
}

func (x *CleaveOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *CleaveOp) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *CleaveOp) GetCleavedlabel() uint64 {
	if x != nil {
		return x.Cleavedlabel
	}
	return 0
}

func (x *CleaveOp) GetCleaved() []uint64 {
	if x != nil {
		return x.Cleaved
	}
	return nil
}

type MappingOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid    uint64   `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Mapped   uint64   `protobuf:"varint,2,opt,name=mapped,proto3" json:"mapped,omitempty"`
	Original []uint64 `protobuf:"varint,3,rep,packed,name=original,proto3" json:"original,omitempty"`
}

func (x *MappingOp) Reset() {
	*x = MappingOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingOp) ProtoMessage() {}

func (x *MappingOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingOp.ProtoReflect.Descriptor instead.
func (*MappingOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{3}
}

func (x *MappingOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *MappingOp) GetMapped() uint64 {
	if x != nil {
		return x.Mapped
	}
	return 0
}

func (x *MappingOp) GetOriginal() []uint64 {
	if x != nil {
		return x.Original
	}
	return nil
}

type MappingOps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings []*MappingOp `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *MappingOps) Reset() {
	*x = MappingOps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingOps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingOps) ProtoMessage() {}

func (x *MappingOps) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingOps.ProtoReflect.Descriptor instead.
func (*MappingOps) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{4}
}

func (x *MappingOps) GetMappings() []*MappingOp {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type SplitOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid    uint64              `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Target   uint64              `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Newlabel uint64              `protobuf:"varint,3,opt,name=newlabel,proto3" json:"newlabel,omitempty"`
	Coarse   bool                `protobuf:"varint,4,opt,name=coarse,proto3" json:"coarse,omitempty"` // true if rles are block coords (coarse split), not voxels
	Rles     []byte              `protobuf:"bytes,5,opt,name=rles,proto3" json:"rles,omitempty"`
	Svsplits map[uint64]*SVSplit `protobuf:"bytes,6,rep,name=svsplits,proto3" json:"svsplits,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SplitOp) Reset() {
	*x = SplitOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitOp) ProtoMessage() {}

func (x *SplitOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitOp.ProtoReflect.Descriptor instead.
func (*SplitOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{5}
}

func (x *SplitOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *SplitOp) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SplitOp) GetNewlabel() uint64 {
	if x != nil {
		return x.Newlabel
	}
	return 0
}

func (x *SplitOp) GetCoarse() bool {
	if x != nil {
		return x.Coarse
	}
	return false
}

func (x *SplitOp) GetRles() []byte {
	if x != nil {
		return x.Rles
	}
	return nil
}

func (x *SplitOp) GetSvsplits() map[uint64]*SVSplit {
	if x != nil {
		return x.Svsplits
	}
	return nil
}

type SVSplit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Splitlabel  uint64 `protobuf:"varint,1,opt,name=splitlabel,proto3" json:"splitlabel,omitempty"`
	Remainlabel uint64 `protobuf:"varint,2,opt,name=remainlabel,proto3" json:"remainlabel,omitempty"`
}

func (x *SVSplit) Reset() {
	*x = SVSplit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVSplit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVSplit) ProtoMessage() {}

func (x *SVSplit) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVSplit.ProtoReflect.Descriptor instead.
func (*SVSplit) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{6}
}

func (x *SVSplit) GetSplitlabel() uint64 {
	if x != nil {
		return x.Splitlabel
	}
	return 0
}

func (x *SVSplit) GetRemainlabel() uint64 {
	if x != nil {
		return x.Remainlabel
	}
	return 0
}

type SupervoxelSplitOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid       uint64 `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Supervoxel  uint64 `protobuf:"varint,2,opt,name=supervoxel,proto3" json:"supervoxel,omitempty"`
	Splitlabel  uint64 `protobuf:"varint,3,opt,name=splitlabel,proto3" json:"splitlabel,omitempty"`
	Remainlabel uint64 `protobuf:"varint,4,opt,name=remainlabel,proto3" json:"remainlabel,omitempty"`
}

func (x *SupervoxelSplitOp) Reset() {
	*x = SupervoxelSplitOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupervoxelSplitOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupervoxelSplitOp) ProtoMessage() {}

func (x *SupervoxelSplitOp) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupervoxelSplitOp.ProtoReflect.Descriptor instead.
func (*SupervoxelSplitOp) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{7}
}

func (x *SupervoxelSplitOp) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *SupervoxelSplitOp) GetSupervoxel() uint64 {
	if x != nil {
		return x.Supervoxel
	}
	return 0
}

func (x *SupervoxelSplitOp) GetSplitlabel() uint64 {
	if x != nil {
		return x.Splitlabel
	}
	return 0
}

func (x *SupervoxelSplitOp) GetRemainlabel() uint64 {
	if x != nil {
		return x.Remainlabel
	}
	return 0
}

type OpCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutid uint64 `protobuf:"varint,1,opt,name=mutid,proto3" json:"mutid,omitempty"`
	Stage string `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *OpCompleted) Reset() {
	*x = OpCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpCompleted) ProtoMessage() {}

func (x *OpCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpCompleted.ProtoReflect.Descriptor instead.
func (*OpCompleted) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{8}
}

func (x *OpCompleted) GetMutid() uint64 {
	if x != nil {
		return x.Mutid
	}
	return 0
}

func (x *OpCompleted) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

type Affinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label1 uint64  `protobuf:"varint,1,opt,name=label1,proto3" json:"label1,omitempty"`
	Label2 uint64  `protobuf:"varint,2,opt,name=label2,proto3" json:"label2,omitempty"`
	Value  float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Affinity) Reset() {
	*x = Affinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affinity) ProtoMessage() {}

func (x *Affinity) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affinity.ProtoReflect.Descriptor instead.
func (*Affinity) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{9}
}

func (x *Affinity) GetLabel1() uint64 {
	if x != nil {
		return x.Label1
	}
	return 0
}

func (x *Affinity) GetLabel2() uint64 {
	if x != nil {
		return x.Label2
	}
	return 0
}

func (x *Affinity) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Affinities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels     []uint64  `protobuf:"varint,1,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	Affinities []float32 `protobuf:"fixed32,2,rep,packed,name=affinities,proto3" json:"affinities,omitempty"`
}

func (x *Affinities) Reset() {
	*x = Affinities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affinities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affinities) ProtoMessage() {}

func (x *Affinities) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affinities.ProtoReflect.Descriptor instead.
func (*Affinities) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{10}
}

func (x *Affinities) GetLabels() []uint64 {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Affinities) GetAffinities() []float32 {
	if x != nil {
		return x.Affinities
	}
	return nil
}

type AffinityTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table map[uint64]*Affinities `protobuf:"bytes,1,rep,name=table,proto3" json:"table,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AffinityTable) Reset() {
	*x = AffinityTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AffinityTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AffinityTable) ProtoMessage() {}

func (x *AffinityTable) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AffinityTable.ProtoReflect.Descriptor instead.
func (*AffinityTable) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{11}
}

func (x *AffinityTable) GetTable() map[uint64]*Affinities {
	if x != nil {
		return x.Table
	}
	return nil
}

type SVCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts map[uint64]uint32 `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SVCount) Reset() {
	*x = SVCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVCount) ProtoMessage() {}

func (x *SVCount) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVCount.ProtoReflect.Descriptor instead.
func (*SVCount) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{12}
}

func (x *SVCount) GetCounts() map[uint64]uint32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type LabelIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks      map[uint64]*SVCount `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key is encoded block coord ZYX (packed little-endian 21-bit numbers where MSB is sign flag)
	Label       uint64              `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
	LastMutId   uint64              `protobuf:"varint,3,opt,name=last_mut_id,json=lastMutId,proto3" json:"last_mut_id,omitempty"`
	LastModTime string              `protobuf:"bytes,4,opt,name=last_mod_time,json=lastModTime,proto3" json:"last_mod_time,omitempty"` // string is time in RFC 3339 format
	LastModUser string              `protobuf:"bytes,5,opt,name=last_mod_user,json=lastModUser,proto3" json:"last_mod_user,omitempty"`
	LastModApp  string              `protobuf:"bytes,6,opt,name=last_mod_app,json=lastModApp,proto3" json:"last_mod_app,omitempty"`
}

func (x *LabelIndex) Reset() {
	*x = LabelIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelIndex) ProtoMessage() {}

func (x *LabelIndex) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelIndex.ProtoReflect.Descriptor instead.
func (*LabelIndex) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{13}
}

func (x *LabelIndex) GetBlocks() map[uint64]*SVCount {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *LabelIndex) GetLabel() uint64 {
	if x != nil {
		return x.Label
	}
	return 0
}

func (x *LabelIndex) GetLastMutId() uint64 {
	if x != nil {
		return x.LastMutId
	}
	return 0
}

func (x *LabelIndex) GetLastModTime() string {
	if x != nil {
		return x.LastModTime
	}
	return ""
}

func (x *LabelIndex) GetLastModUser() string {
	if x != nil {
		return x.LastModUser
	}
	return ""
}

func (x *LabelIndex) GetLastModApp() string {
	if x != nil {
		return x.LastModApp
	}
	return ""
}

type LabelIndices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices []*LabelIndex `protobuf:"bytes,1,rep,name=indices,proto3" json:"indices,omitempty"`
}

func (x *LabelIndices) Reset() {
	*x = LabelIndices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelops_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelIndices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelIndices) ProtoMessage() {}

func (x *LabelIndices) ProtoReflect() protoreflect.Message {
	mi := &file_labelops_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelIndices.ProtoReflect.Descriptor instead.
func (*LabelIndices) Descriptor() ([]byte, []int) {
	return file_labelops_proto_rawDescGZIP(), []int{14}
}

func (x *LabelIndices) GetIndices() []*LabelIndex {
	if x != nil {
		return x.Indices
	}
	return nil
}

var File_labelops_proto protoreflect.FileDescriptor

var file_labelops_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6f, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x4f, 0x0a, 0x07, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75,
	0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64,
	0x22, 0x76, 0x0a, 0x08, 0x43, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x75, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x64, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x63, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x22, 0x55, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x22,
	0x3a, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x73, 0x12, 0x2c, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x07,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x61, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x63, 0x6f, 0x61, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x08, 0x73, 0x76, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x70, 0x2e,
	0x53, 0x76, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x76, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x1a, 0x4b, 0x0a, 0x0d, 0x53, 0x76, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x56, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x07, 0x53, 0x56, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x6f, 0x78, 0x65, 0x6c,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x4f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x6f, 0x78, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x6f, 0x78, 0x65, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x39, 0x0a, 0x0b, 0x4f, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x75, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d,
	0x75, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x41, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x31, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0a,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x4b, 0x0a, 0x0a, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x07, 0x53, 0x56, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x56, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xae, 0x02, 0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x75, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x75, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x1a, 0x49, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x56, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x0c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_labelops_proto_rawDescOnce sync.Once
	file_labelops_proto_rawDescData = file_labelops_proto_rawDesc
)

func file_labelops_proto_rawDescGZIP() []byte {
	file_labelops_proto_rawDescOnce.Do(func() {
		file_labelops_proto_rawDescData = protoimpl.X.CompressGZIP(file_labelops_proto_rawDescData)
	})
	return file_labelops_proto_rawDescData
}

var file_labelops_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_labelops_proto_goTypes = []interface{}{
	(*RenumberOp)(nil),        // 0: proto.RenumberOp
	(*MergeOp)(nil),           // 1: proto.MergeOp
	(*CleaveOp)(nil),          // 2: proto.CleaveOp
	(*MappingOp)(nil),         // 3: proto.MappingOp
	(*MappingOps)(nil),        // 4: proto.MappingOps
	(*SplitOp)(nil),           // 5: proto.SplitOp
	(*SVSplit)(nil),           // 6: proto.SVSplit
	(*SupervoxelSplitOp)(nil), // 7: proto.SupervoxelSplitOp
	(*OpCompleted)(nil),       // 8: proto.OpCompleted
	(*Affinity)(nil),          // 9: proto.Affinity
	(*Affinities)(nil),        // 10: proto.Affinities
	(*AffinityTable)(nil),     // 11: proto.AffinityTable
	(*SVCount)(nil),           // 12: proto.SVCount
	(*LabelIndex)(nil),        // 13: proto.LabelIndex
	(*LabelIndices)(nil),      // 14: proto.LabelIndices
	nil,                       // 15: proto.SplitOp.SvsplitsEntry
	nil,                       // 16: proto.AffinityTable.TableEntry
	nil,                       // 17: proto.SVCount.CountsEntry
	nil,                       // 18: proto.LabelIndex.BlocksEntry
}
var file_labelops_proto_depIdxs = []int32{
	3,  // 0: proto.MappingOps.mappings:type_name -> proto.MappingOp
	15, // 1: proto.SplitOp.svsplits:type_name -> proto.SplitOp.SvsplitsEntry
	16, // 2: proto.AffinityTable.table:type_name -> proto.AffinityTable.TableEntry
	17, // 3: proto.SVCount.counts:type_name -> proto.SVCount.CountsEntry
	18, // 4: proto.LabelIndex.blocks:type_name -> proto.LabelIndex.BlocksEntry
	13, // 5: proto.LabelIndices.indices:type_name -> proto.LabelIndex
	6,  // 6: proto.SplitOp.SvsplitsEntry.value:type_name -> proto.SVSplit
	10, // 7: proto.AffinityTable.TableEntry.value:type_name -> proto.Affinities
	12, // 8: proto.LabelIndex.BlocksEntry.value:type_name -> proto.SVCount
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_labelops_proto_init() }
func file_labelops_proto_init() {
	if File_labelops_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_labelops_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenumberOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleaveOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingOps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVSplit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupervoxelSplitOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affinities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AffinityTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelops_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelIndices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_labelops_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_labelops_proto_goTypes,
		DependencyIndexes: file_labelops_proto_depIdxs,
		MessageInfos:      file_labelops_proto_msgTypes,
	}.Build()
	File_labelops_proto = out.File
	file_labelops_proto_rawDesc = nil
	file_labelops_proto_goTypes = nil
	file_labelops_proto_depIdxs = nil
}
