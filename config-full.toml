# Example complete configuration for DVID with multiple database backends assigned 
# per data type and data instance.

[server]
httpAddress = "localhost:8000"
rpcAddress = "localhost:8001"
webClient = "/path/to/webclient"

# to return Timing-Allow-Origin headers in response
# allowTiming = true

# How new data instance ids are generated.
# Is one of "random" or "sequential".  If "sequential" can set "start_instance_id" property.
# Use of "random" is a cheap way to have multiple frontend DVIDs use a shared store without
# key collisions.
instance_id_gen = "sequential"
instance_id_start = 100  # new ids start at least from this.

# Email server to use for notifications and server issuing email-based authorization tokens.
[email]
notify = ["foo@someplace.edu"] # Who to send email in case of panic
username = 
password = 
server = 
port = 25

[logging]
logfile = "/demo/logs/dvid.log"
max_log_size = 500 # MB
max_log_age = 30   # days

# Backends can be specified in three ways:
#
# backend.default  = default storage engine if not otherwise specified
# backend.metadata = store to use for metadata
# backend.<datatype> = store to use for the given "datatype"
# backend."<name>:<uuid>" = store to use for a particular data instance, 
#   where uuid is the full UUID of the data instance's root in the DAG.
#
# If no backend is specified, DVID will return an error unless there is only
# one store, which will automatically be backend.default.

[backend]
    [backend.default]
    store = "raid6"

    [backend.labelblk]
    store = "ssd"

    [backend."grayscale:99ef22cd85f143f58a623bd22aad0ef7"]
    store = "kvautobus"


# List the different storage systems available for metadata, data instances, etc.
# Any nickname can be used for a backend.  In this case, it's "raid6" to reflect
# that the directory is on a RAID-6 drive system, "ssd" for a directory mounted on
# a SSD, and "kvautobus" for an internal Janelia HTTP dataservice.  Note that all
# store properties like "engine" and "path" should be lower-case by convention.

[store]
    [store.raid6]
    engine = "basholeveldb"
    path = "/data/dbs/basholeveldb"
 
    [store.ssd]
    engine = "basholeveldb"
    path = "/datassd/dbs/basholeveldb"
 
    [store.kvautobus]
    engine = "kvautobus"
    path = "http://tem-dvid.int.janelia.org:9000"
    collection = "99ef22cd85f143f58a623bd22aad0ef7"
    owner = "flyEM"
    timeout = 30   # allow max 30 seconds per request to above HTTP service
                   # use 0 for no timeout.

    [store.kvautobus2]
    engine = "kvautobus"
    path = "http://tem-dvid.int.janelia.org:9000"
    collection = "389a22cd85f143f511923bd22aac776b"
    owner = "otherTeam"

# Groupcache support lets you cache GETs from particular data instances.  The
# configuration below marks some data instances as both immutable and
# using a non-ordered key-value store for GETs.  These instances may be versioned.
# An example case would be imagetile, which is immutable after some initial set
# of ingestions that may be spread across a few versions at the top of the DAG.

[groupcache]
gb = 60  # 60 GB if we have a beefy server
host = "http://10.0.0.1:8003"
peers = ["http://10.0.0.2:8002", "http://10.0.0.3:8002"]  # currently not used
instances = ["graytiles:99ef22cd85f143f58a623bd22aad0ef7"]